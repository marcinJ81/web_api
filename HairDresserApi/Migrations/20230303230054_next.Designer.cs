// <auto-generated />
using System;
using HairDresserApi.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HairDresserApi.Migrations
{
    [DbContext(typeof(SalonDbContext))]
    [Migration("20230303230054_next")]
    partial class next
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HairDresserApi.Entities.Client", b =>
                {
                    b.Property<int>("client_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("client_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("client_phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("client_id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("HairDresserApi.Entities.Employee", b =>
                {
                    b.Property<int>("employee_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("employee_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("position_id")
                        .HasColumnType("int");

                    b.HasKey("employee_id");

                    b.HasIndex("position_id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HairDresserApi.Entities.Position", b =>
                {
                    b.Property<int>("position_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("position_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("position_Id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("HairDresserApi.Entities.Reservation", b =>
                {
                    b.Property<int>("reservation_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("client_id")
                        .HasColumnType("int");

                    b.Property<int>("employee_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("reservation_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("service_id")
                        .HasColumnType("int");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.HasKey("reservation_id");

                    b.HasIndex("client_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("service_id");

                    b.HasIndex("status_id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("HairDresserApi.Entities.ServiceTable", b =>
                {
                    b.Property<int>("service_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("service_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("service_price")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.HasKey("service_id");

                    b.ToTable("ServiceTables");
                });

            modelBuilder.Entity("HairDresserApi.Entities.StatusTable", b =>
                {
                    b.Property<int>("status_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("status_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("status_id");

                    b.ToTable("StatusTables");

                    b.HasData(
                        new
                        {
                            status_id = 1,
                            status_name = "Rezerwacja"
                        },
                        new
                        {
                            status_id = 2,
                            status_name = "W trakcie"
                        },
                        new
                        {
                            status_id = 3,
                            status_name = "Zakończone"
                        },
                        new
                        {
                            status_id = 4,
                            status_name = "Anulowane"
                        });
                });

            modelBuilder.Entity("HairDresserApi.Entities.Employee", b =>
                {
                    b.HasOne("HairDresserApi.Entities.Position", "position")
                        .WithMany()
                        .HasForeignKey("position_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("position");
                });

            modelBuilder.Entity("HairDresserApi.Entities.Reservation", b =>
                {
                    b.HasOne("HairDresserApi.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HairDresserApi.Entities.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HairDresserApi.Entities.ServiceTable", "serviceTable")
                        .WithMany()
                        .HasForeignKey("service_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HairDresserApi.Entities.StatusTable", "statusReservation")
                        .WithMany()
                        .HasForeignKey("status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("employee");

                    b.Navigation("serviceTable");

                    b.Navigation("statusReservation");
                });
#pragma warning restore 612, 618
        }
    }
}
